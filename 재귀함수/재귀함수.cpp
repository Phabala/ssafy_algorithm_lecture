#include <iostream>
using namespace std;

// 1. 규칙찾기, 2. 기저 조건 설정, 3. 하고 싶은 일 처리 (신경써야 할건 여섯가지)

// stack overflow: 스택을 너무 많이 써서 메모리가 넘쳤다.
// Visual Studio 디버그 --> 창 --> 호출 스택 가면 호출 스택 볼 수 있다.

void func1(int a)
{
    if (a == 10)
    { // 중단 하고 싶은 조건을 설정. (11번 실행됨)
        // ----- 끝낼 조건 (기저조건), 여기서 끝내면서 처리하고 싶은 내용을 써주면 된다
        cout << "끝! ";
        return;
    }
    cout << a << " "; // 하지만 10은 출력되지 않는다. 왜냐하면 위 라인에서 return 했기 때문.

    // 이 구문은 재귀를 기준으로 나눈다.
    // 얘 앞에 있는 것은 다음 func로 가기 전, 즉 다음 func로 진행해 나가면서 처리할 내용들을 작성
    // 그 뒤는 다음 func로 간 후 돌아 오면서 처리하는 것처럼 보임
    // (다음 box를 갔다온 '후')
    func1(a + 1); // 다음 box(function)에서는 내가 갖고 있던 a보다 1 더 큰 값을 사용해라

    cout << a << " "; // 이게 실행될 때는 다음 box(function) 을 갔다오고 난 후이다.
}

int main()
{
    func1(0);
    return 0;
}

// 현재 box 에서 다음 box 로 바귀는 정보 --> 매개변수를 어떻게 수정해야 할지가 중요하다

// 두배로 가는 함수로 바꾸고 싶을 때 내가 바꿔준 세가지:
// func1 안에서 func1 안의 매개변수 *규칙* <-- 가장 우선이 되는 것
// main에서 func1()의 매개변수 *시작값*
// func1 맨 앞의 if *기저조건*

// 함수에서 하고 싶은 것을 컨트롤 할 것 세가지:
// func1 앞 (재귀함수를 진행하면서 실행할 것)
// 기저조건 (재귀함수를 다 마치고 실행할 것)
// func1 뒤 (재귀함수를 돌아오면서 실행할 것)